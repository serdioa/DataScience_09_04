Algorithmic Trading: Fast/Slow
========================================================
author: Alexey Serdyuk
date: May 2019
autosize: true

Algorithmic Trading
========================================================

This is a course project for the course "Developing Data Products" offered by
[Coursera](https://www.coursera.org/learn/data-products).

* Up to 80% of all trades on stock markets are executed by algorithms ([CNBC](https://www.cnbc.com/2018/12/05/sell-offs-could-be-down-to-machines-that-control-80percent-of-us-stocks-fund-manager-says.html))
* We implemented a simple trend-following algorithm which allows you
to investigate an impact of various parameters on a revenue.
* You may test the algorithm on [German market index DAX](https://en.wikipedia.org/wiki/DAX)
or any of 30 stocks included into the DAX.

Source code: https://github.com/serdioa/DataScience_09_04

Application: TODO


Historical Market Data
========================================================

Historical market data is available on [Yahoo Finance](https://finance.yahoo.com)
and may be downloaded by R package [quantmod](https://www.quantmod.com).

```{r eval=FALSE}
library(quantmod)
GDAXI <- getSymbols("^GDAXI", src = "yahoo", auto.assign = FALSE)
head(GDAXI[,6])
```
```{r echo=FALSE}
# This is a cheat. If we repeatedly download prices from Yahoo Finance when
# preparing this presentation, after a couple attempts Yahoo will block our
# IP address. Instead we downloaded prices once and saved them in RDS file.
# When rendering this presentation, we are loading prices from the RDS file.
# Yes, this is a cheat - but we are rendering the data downloaded before
# by the quantmod, not by some manual process.
library(quantmod)
GDAXI <- readRDS("GDAXI.RDS")
head(GDAXI[,6], 3)
```

We will use the column Adjusted with the price [adjusted for splits, merges,
dividends etc](https://www.investopedia.com/terms/a/adjusted_closing_price.asp).

Trends and Fast/Slow Algorithm
========================================================

* Prices tend to trend: they rise for some time, than fall for some time.
Trends are mixed with cycles and random noise, and often hard to recognize.
* If we are able to recognize trends, we may buy stocks when prices are turning up,
and sell when prices are turning down.
* We calculate two functions (indicators) to smooth the stock price and remove
random noise. One indicator follows price closely (fast indicator),
the other lags behind (slow indicator).
* Whenever fast indicator is above the slow, we expect rising prices and open a
[long position](https://en.wikipedia.org/wiki/Long_(finance\)).
Whenever fast indicator is below the slow, we expect falling
prices and open a [short position](https://en.wikipedia.org/wiki/Short_(finance\)).
* You may find more explanations and examples on the application help page.

Application
========================================================

**The application allows you to choose:**

* The index or stock you want to trade.
* Algorithm for calculating slow and fast indicators.
* Time period for fast and slow indicators.

**The application outputs:**

* Chart with stock price, fast and slow indicators, as well as markers for "buy"
and "sell" signals.
* Chart with development of your capital in percent, and a linear regression line.
* Table with most important statistics, such as average profit/loss in percent per year.
* All trades generated by the algorithm.
